'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/','title':"zfs-snap-diff",'content':"This describes the currently unreleased beta version.  zfs-snap-diff searches different file versions in your zfs snapshots for you.\nIf you have hundreds or thousands of zfs snapshots, zfs-snap-diff searched the snapshots and shows you only the snapshots where a given file was modified.\nTo speedup this process, it performs the search incremental when you request an older file version.\nYou can inspect a diff from the actual file version to the older file version in the snapshot, revert a single change or restore a whole file.\nzfs-snap-diff has a web frontend, so it can run on your local work machine or on your remote file / backup server (no Xserver necesarry). To keep it portable it's made as a single static compiled executable.\n  "});index.add({'id':1,'href':'/docs/install/','title':"Installation",'content':"This describes the currently unreleased beta version.  Binary packages You can download the latest binary package from here or from the githup release page.\nLinux  Download the beta version for Linux amd64 here:\nzfs-snap-diff-linux-v1.0.0-beta-16-g1bae2c4.tgz\n FreeBSD  Download the beta version for FreeBSD amd64 here:\nzfs-snap-diff-freebsd-v1.0.0-beta-16-g1bae2c4.tgz\n macOS  Download the beta version for macOS amd64 here:\nzfs-snap-diff-darwin-v1.0.0-beta-16-g1bae2c4.tgz\n Solaris  Download the beta version for Solaris amd64 here:\nzfs-snap-diff-solaris-v1.0.0-beta-16-g1bae2c4.tgz\n  Try with the -use-sudo flag if it's not working - and please give feedback.  If you need a 32bit version, or a binary for a different platform, feel free to contact me!  Build from source You need only go to build this project.\ngo The minimum supported go version is go1.12.\n clone this repo: git clone -b dev https://github.com/j-keck/zfs-snap-diff change to the checkout directory: cd zfs-snap-diff build it: go build -ldflags=\u0026quot;-X main.version=$(git describe)\u0026quot; ./cmd/zfs-snap-diff  The optional -ldflags=\u0026quot;-X main.version=$(git describe)\u0026quot; flag updates the version string in the binary.\nnix I use nix to build my projects. The nix build also compiles the frontend to javascript and decode it in pkg/webapp/bindata.go.\n clone this repo: git clone -b dev https://github.com/j-keck/zfs-snap-diff change to the checkout directory: cd zfs-snap-diff build it: nix-build -A zfs-snap-diff  The build artifacts zfs-snap-diff and zsd are in ./result/bin/.\nTo crosscompile the binary use:\n FreeBSD: nix-build -A zfs-snap-diff --argstr goos freebsd MacOS: nix-build -A zfs-snap-diff --argstr goos darwin Solaris: nix-build -A zfs-snap-diff --argstr goos solaris  "});index.add({'id':2,'href':'/docs/zfs-snap-diff/','title':"zfs-snap-diff",'content':"This describes the currently unreleased beta version.  zfs-snap-diff - web application to find older versions of a given file in your zfs snapshots.\nWith zfs-snap-diff you can\n  find older file versions in your zfs-snapshots for a given file\n  view the file content from a given snapshot\n  inspect a diff from the older version to the actual version\n  revert a single change\n  restore a version from a zfs snapshot\n  download a file version\n  browse the directory content from a snapshot\n  download a zip-archive from any folder in your snapshots\n  create and destroy snapshots in the webapp\n  bookmark often used folders\n  Usage main⟩ zfs-snap-diff -h zfs-snap-diff - web application to find older versions of a given file in your zfs snapshots. USAGE: ./zfs-snap-diff [OPTIONS] \u0026lt;ZFS_DATASET_NAME\u0026gt; OPTIONS: -V\tprint version and exit -a\tlisten on all interfaces -cert string TLS certificate file -compare-method string used method to determine if a file was modified (\u0026#39;auto\u0026#39;, \u0026#39;mtime\u0026#39;, \u0026#39;size+mtime\u0026#39;, \u0026#39;content\u0026#39;, \u0026#39;md5\u0026#39;) (default \u0026#34;auto\u0026#34;) -d int days to scan (default 7) -diff-context-size int show N lines before and after each diff (default 5) -key string TLS private key file -l string webserver listen address (default \u0026#34;127.0.0.1\u0026#34;) -log-locations log messages with caller location -log-timestamps log messages with timestamps in unix format -mount-snapshots mount snapshot (only necessary if it\u0026#39;s not mounted by zfs automatically -p int webserver port (default 12345) -tls use TLS - NOTE: -cert \u0026lt;CERT_FILE\u0026gt; -key \u0026lt;KEY_FILE\u0026gt; are mandatory -use-cache-dir-for-backups use platform depend user local cache directory for backups (default true) -use-sudo use sudo when executing \u0026#39;zfs\u0026#39; commands -v\tdebug output -vv trace output with caller location -webapp-dir string when given, serve the webapp from the given directory Project home page: https://j-keck.github.io/zfs-snap-diff Startup  startup a server instance  ./zfs-snap-diff [OPTIONS] \u0026lt;ZFS_DATASET_NAME\u0026gt; This starts a embedded webserver and serves the included web-app.\n open your webbrowser at  http://127.0.0.1:12345 Browse the actual filesytem You can browse the actual filesystem and inspect a diff from the actual file version to the older file version in the selected snapshot, revert a single change or restore a whole file.\n  Browse snapshots In this view you can view all snapshots.\n  and inspect the directory content where the snapshot was created\n  Create snapshots To create a snapshot of the actual dataset use the camera symbol  in the dataset selector. You can enter a snapshot name in \u0026ldquo;Snapshot name template\u0026rdquo; and zfs-snap-diff will show the resulting name in \u0026ldquo;Snapshot name\u0026rdquo;.\n  The template supports the following format sequences:\nFormat sequences are alike the `date` command %d: day of month (e.g., 01) %m: month (01..12) %y: last two digits of year (00..99) %Y: year %F: full date; like %Y-%m-%d %H: hour (00..23) %I: hour (01..12) %M: minute (00..59) %S: second (00..60) %s: seconds since 1970-01-01 00:00:00 UTC The default snapshot name template is per snapshot-name-template configurable.\nDestroy snapshot You can destroy snapshots with the  symbol in \u0026ldquo;Browse snapshots\u0026rdquo; where you see all snapshots for the selected dataset.\n  Download zip-archive With the  symbol in the file browser you can download a whole directory as a zip-archive. You can download a archive from the actual filesystem or from a snapshot.\n  The archive size is restricted by default. You can configure per max-archive-unpacked-size-mb.\n"});index.add({'id':3,'href':'/docs/zsd/','title':"zsd",'content':"This describes the currently unreleased beta version.  zsd - cli tool to find older versions of a given file in your zfs snapshots.\nWith zsd you can\n  find older file versions in your zfs snapshots for a given file\n  view the file content from a given snapshot\n  inspect a diff from the older version to the actual version\n  restore a version from a zfs snapshot\n  It uses the same code as zfs-snap-diff to find different file versions in your zfs snapshots.\nUsage main⟩ zsd -h zsd - cli tool to find older versions of a given file in your zfs snapshots. USAGE: ./zsd [OPTIONS] \u0026lt;FILE\u0026gt; \u0026lt;ACTION\u0026gt; OPTIONS: -V\tprint version and exit -d int days to scan (default 7) -v\tdebug output -vv trace output with caller location ACTIONS: list : list zfs snapshots where the given file was modified cat \u0026lt;#|SNAPSHOT\u0026gt;: show the file content from the given snapshot diff \u0026lt;#|SNAPSHOT\u0026gt;: show a diff from the selected snapshot to the actual version restore \u0026lt;#|SNAPSHOT\u0026gt;: restore the file from the given snapshot You can use the snapshot number from the `list` output or the snapshot name to select a snapshot. Project home page: https://j-keck.github.io/zfs-snap-diff List snapshots Use the list action to list all snapshots where the given file was modified.\nmain⟩ zsd go.mod list scan the last 7 days for other file versions # | Snapshot | Snapshot age ----------------------------------------------------------- 0 | zfs-auto-snap_hourly-2020-02-12-12h00U | 5 hours 1 | zfs-auto-snap_hourly-2020-02-12-09h00U | 8 hours Show file content Use the cat action to show the file content from the given snapshot.\nYou can use the snapshot number from the list output or the snapshot name to select a snapshot.  main⟩ zsd go.mod cat 0 module github.com/j-keck/zfs-snap-diff require ( github.com/j-keck/go-diff v1.0.0 github.com/j-keck/plog v0.5.0 github.com/stretchr/testify v1.4.0 // indirect ) go 1.12 Show diff To show a diff from the selected snapshot to the actual version use the diff action.\nYou can use the snapshot number from the list output or the snapshot name to select a snapshot.  main⟩ zsd go.mod diff 0 Diff from the actual version to the version from: 2020-02-12 10:07:44.434355182 +0100 CET module github.com/j-keck/zfs-snap-diff require ( github.com/BurntSushi/toml v0.3.1 github.com/j-keck/go-diff v1.0.0 - github.com/j-keck/plog v0.5.0 + github.com/j-keck/plog v0.6.0 github.com/stretchr/testify v1.4.0 // indirect ) go 1.12 Restore file To restore a given file with an older version use restore.\nYou can use the snapshot number from the list output or the snapshot name to select a snapshot.  main⟩ zsd go.mod restore 0 backup from the actual version created at: /home/j/.cache/zfs-snap-diff/backups/home/j/prj/priv/zfs-snap-diff/go.mod_20200212_182709% version restored from snapshot: zfs-auto-snap_hourly-2020-02-12-12h00U A backup of the actual version will be created.  "});index.add({'id':4,'href':'/docs/configuration/','title':"Configuration",'content':"zfs-snap-diff loads it's configuration from:\nLinux, FreeBSD, Solaris  $XDG_CONFIG_HOME/.config/zfs-snap-diff/zfs-snap-diff.toml $HOME/.config/zfs-snap-diff/zfs-snap-diff.toml   macOS  $HOME/Library/Application Support/zfs-snap-diff/zfs-snap-diff.toml    if it does not find a configuration, it will create the following default configuration:\nuse-cache-dir-for-backups = true days-to-scan = 7 max-archive-unpacked-size-mb = 200 snapshot-name-template = \u0026#34;zfs-snap-diff-%FT%H:%M\u0026#34; compare-method = \u0026#34;auto\u0026#34; diff-context-size = 5 [webserver] listen-ip = \u0026#34;127.0.0.1\u0026#34; listen-port = 12345 use-tls = false cert-file = \u0026#34;\u0026#34; key-file = \u0026#34;\u0026#34; [zfs] use-sudo = false mount-snapshots = false Keys use-cache-dir-for-backups If it's set to true, the file backups will be stored in the users cache-directory.\n On Unix systems, it returns $XDG_CACHE_HOME as specified by https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html if non-empty, else $HOME/.cache. On Darwin, it returns $HOME/Library/Caches. On Windows, it returns %LocalAppData%. On Plan 9, it returns $home/lib/cache.\n https://golang.org/pkg/os/#UserCacheDir\nIf it's false, it will create the backup file under the actual directory in the ./zfs-snap-diff/ folder.\ndays-to-scan Configures the day range for each scan. If you have a many daily snapshots set this to 1.\nmax-archive-unpacked-size-mb Maximal unpacked archive size in megabytes. Set this to -1 to disable the size-check.\nsnapshot-name-template Format sequences are alike the `date` command %d: day of month (e.g., 01) %m: month (01..12) %y: last two digits of year (00..99) %Y: year %F: full date; like %Y-%m-%d %H: hour (00..23) %I: hour (01..12) %M: minute (00..59) %S: second (00..60) %s: seconds since 1970-01-01 00:00:00 UTC compare-method Method how to determine two file versions are the same version. This is used when scanning the zfs snapshots to determine a file was changed in a snapshot.\nauto Uses md5 for text files and size+mtime for others\nsize If two files versions have the same filesize, it's interpreted as the same version.\nmtime If two files versions have the same mtime, it's interpreted as the same version.\nsize+mtime If two files versions have the same size AND mtime, it's interpreted as the same version.\ncontent If two files versions have the same content, it's interpreted as the same version.\nmd5 If two files versions have the same md5 sum, it's interpreted as the same version.\ndiff-context-size Diff context size in the webui.\n"});index.add({'id':5,'href':'/docs/changelog/','title':"Changelog",'content':"1.0.0-beta (unreleased) This version is a complete rewrite.\nThe backend is implemented in Go (as before) and the frontend in PureScript.\n   create and destroy snapshots from the webapp\n  download a complete directory as a zip-archive\n  zsd cli tool to find different file-versions in the command line\n does not need a running zfs-snap-diff instance    date-range based search for file versions\n this speeds up the scan dramatically if there are thousands snapshots on spinning disks    bookmark support\n bookmarks are per dataset and stored in the browser (Web storage).    works now also with \u0026lsquo;legacy\u0026rsquo; mountpoints\n  all commits from 0.0.10\u0026hellip;dev\n0.0.10   use relative url for service endpoints\n  to use zfs-snap-diff behind a reverse proxy\n  minimal example config snipped for nginx:\nlocation zfs-snap-diff { proxy_pass http://localhost:12345/; }\n    optional tls encryption\n  listen address per \u0026lsquo;-l\u0026rsquo; flag configurable\n  all commits from 0.0.9\u0026hellip;0.0.10\n0.0.9  show file size and modify timestamp in the file-browser list directories at first in the file-browser sortable columns in the file-browser only regular files / directories are clickable  all commits from 0.0.8\u0026hellip;0.0.9\n0.0.8  dataset selectable in \u0026lsquo;browse-actual\u0026rsquo; view add size informations to dataset (to match \u0026lsquo;zfs list\u0026rsquo; output) small fixes code cleanup  all commits from 0.0.7\u0026hellip;0.0.8\n0.0.7  support sub zfs filesystems (datasets) optional use sudo when execute zfs commands  necessary under linux when running as non root needs sudo rules start `zfs-snap-diff` with-'-use-sudo\u0026rsquo;   new view for server messages  all commits from 0.0.6\u0026hellip;0.0.7\n0.0.6  check if file in snapshot has changed filetype depend:  text files: md5 others: size+modTime   diffs created in the backend (per go-diff)  different presentation: intext / sid- by side possibility to revert single changes    all commits from 0.0.5\u0026hellip;0.0.6\n0.0.5  file compare method configurable: size+modTime (default) or md5 optional limit how many snapshots are scan to search older file version autohide notifications in frontend show message if no snapshots found  all commits from 0.0.4\u0026hellip;0.0.5\n0.0.4  view, diff, download or restore file from a snapshot view file with syntax highlight browse old snapshot versions easy switch \u0026ldquo;versions\u0026rdquo; per \u0026lsquo;Older\u0026rsquo; / \u0026lsquo;Newer\u0026rsquo; buttons cleanup frontend refactor backend  all commits 0.0.3\u0026hellip;0.0.4\n0.0.3  show server errors on frontend show waiting spinner when loading  all commits 0.0.2\u0026hellip;0.0.3\n0.0.2  partial frontend configuration from server fix firefox ui  all commits 0.0.1\u0026hellip;0.0.2\n0.0.1  prototype  "});index.add({'id':6,'href':'/categories/','title':"Categories",'content':""});index.add({'id':7,'href':'/docs/','title':"Docs",'content':""});index.add({'id':8,'href':'/tags/','title':"Tags",'content':""});})();