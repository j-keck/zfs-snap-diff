#
# The gh-pages site at 'https://j-keck.github.io/zfs-snap-diff'
# are generated from this file
#
#+title: zfs-snap-diff
#+hugo_base_dir: ./doc/site
#+options: creator:t author:nil

* Index
:PROPERTIES:
:export_title: zfs-snap-diff
:export_file_name: _index
:export_hugo_section: /
:export_hugo_weight: 10
:export_hugo_type: docs
:END:

~zfs-snap-diff~ helps you with your zfs snapshots.

** Find file versions

 ~zfs-snap-diff~ searches different file versions in your zfs snapshots for you.

 If you have hundreds or thousands of zfs snapshots, ~zfs-snap-diff~ searched
 the snapshots and shows you only the snapshots where a given file was modified.

 You can inspect a diff from the actual file version to the older file version in the
 snapshot, revert a single change or restore a whole file.


** Management

You can create and destroy zfs snapshots, use the integrated directory browser to
navigate in your snapshots (directory history) and download a directory as a zip-archive.


** Simply use

 [[/docs/zfs-snap-diff][~zfs-snap-diff~]] has a web frontend, so it can run on your local work machine or on your
 remote file / backup server (no Xserver necesarry). To keep it portable it's made
 as a single static compiled executable.

 For a quick file version lookup / restore in the terminal, it contains the independent [[/docs/zsd][~zsd~]] cli tool.

  #+attr_html: :alt Example session from zfs-snap-diff
  [[/images/zfs-snap-diff.gif][file:/images/zfs-snap-diff.gif]]



* Installation
  :PROPERTIES:
  :export_file_name: install
  :export_hugo_weight: 20
  :export_hugo_section: docs
  :END:

** Binary packages

{{< hint warning >}}
This is the first release after a complete rewrite. You find older versions on the [[https://github.com/j-keck/zfs-snap-diff/releases][GitHub release page]].

If you have any questions, trouble or other input, feel free to open an
issue, contact me per mail (see my github profile), or over [[https://keybase.io/jkeck][keybase.io]].
{{< /hint >}}

{{< hint info >}}
The tar archive contains currently only the executables. In the following releases
i will provide distribution specific packages.
{{< /hint >}}


You can download the latest binary package from here or from the [[https://github.com/j-keck/zfs-snap-diff/releases][GitHub release page]].

 #+BEGIN_SRC elisp :results output raw :exports results
   (defun version-string ()
       "Lookup the actual `zfs-snap-diff' version."
       (s-trim-right (shell-command-to-string "git describe --abbrev=0 --match 'v[0-9].[0-9].[0-9]'")))

     (defun archive-name-string (platform version)
       "Generate the archive name for the given PLATFORM."
       (format "zfs-snap-diff-%s-%s.tgz" platform version))

     (defun section-for (platform artifact version)
       (format (concat "{{< tab \"%s\" >}}\n"
                       "  1.) **Download** the latest version for **%s amd64**: "
                       "[[https://github.com/j-keck/zfs-snap-diff/releases/download/%s/%s][%s]]\n\n"
                       "  2.) Unpack the archive: ~tar xvf %s~\n\n"
                       "  3.) Run it:  ~./zfs-snap-diff [OPTIONS] <ZFS_DATASET_NAME>~\n"
                       "{{< /tab >}}\n\n"
               ) platform platform version artifact artifact artifact))

     (let ((v (version-string)))
       (princ "\n\n{{<tabs \"install\">}}\n")
       (princ (section-for "Linux" (archive-name-string "linux" v) v))
       (princ (section-for "FreeBSD" (archive-name-string "freebsd" v) v))
       (princ (section-for "macOS" (archive-name-string "darwin" v) v))
       (princ (section-for "Solaris" (archive-name-string "solaris" v) v))
       (princ "{{< /tabs >}}\n\n"))
 #+END_SRC


{{< hint warning >}}
Try with the ~-use-sudo~ flag if it's not working - and please give feedback.
{{< /hint >}}

{{< hint info >}}
If you need a 32bit version, or a binary for a different
platform, feel free to contact me!
{{< /hint >}}



** Build from source

 The backend from ~zfs-snap-diff~ is implemented in [[https://golang.org][Go]], the frontend in [[http://purescript.org][PureScript]].

*** ~go~

 I use [[https://github.com/go-bindata/go-bindata][go-bindata]] to decode the frontend code and all dependencies to a
 go source file so you need only the go compiler to compile it yourself.

The minimum supported go version is =go1.12=.

  - clone this repo: ~git clone --depth 1 https://github.com/j-keck/zfs-snap-diff~
  - ~cd zfs-snap-diff~
  - build it: ~go build -ldflags="-X main.version=$(git describe)" ./cmd/zfs-snap-diff~

The optional ~-ldflags="-X main.version=$(git describe)"~ flag updates the ~version~ string in the binary.


*** ~nix~

I use [[https://nixos.org/nix/][nix]] to build my projects. The ~nix~ build also compiles the frontend
to javascript and decode it in ~pkg/webapp/bindata.go~.

  - clone this repo: ~git clone --depth 1 https://github.com/j-keck/zfs-snap-diff~
  - change to the checkout directory: ~cd zfs-snap-diff~
  - build it: ~nix-build -A zfs-snap-diff~

The build artifacts ~zfs-snap-diff~ and ~zsd~ are in ~./result/bin/~.

To crosscompile the binary use:

  - FreeBSD: ~nix-build -A zfs-snap-diff --argstr goos freebsd~
  - MacOS: ~nix-build -A zfs-snap-diff --argstr goos darwin~
  - Solaris: ~nix-build -A zfs-snap-diff --argstr goos solaris~


* zfs-snap-diff
  :PROPERTIES:
  :export_file_name: zfs-snap-diff
  :export_hugo_weight: 30
  :export_hugo_section: docs
  :END:

~zfs-snap-diff~ - web application to find older file versions in zfs snapshots and zfs snapshot management tool.


With ~zfs-snap-diff~ you can

  - find older file versions in your zfs-snapshots for a given file

  - view the file content from a given snapshot

  - inspect a diff from the older version to the actual version

  - revert a single change

  - restore a version from a zfs snapshot

  - download a file version

  - browse the directory content from a snapshot

  - download a zip-archive from any folder in your snapshots

  - create and destroy snapshots in the webapp

  - bookmark often used folders


** Usage
#+BEGIN_EXAMPLE
main‚ü© zfs-snap-diff -h
zfs-snap-diff - web application to find older file versions in zfs snapshots and zfs snapshot management tool.

USAGE:
  ./zfs-snap-diff [OPTIONS] <ZFS_DATASET_NAME>

OPTIONS:
  -V	print version and exit
  -a	listen on all interfaces
  -cert string
        TLS certificate file
  -compare-method string
        used method to determine if a file was modified ('auto', 'mtime', 'size+mtime', 'content', 'md5') (default "auto")
  -d int
        days to scan (default 7)
  -diff-context-size int
        show N lines before and after each diff (default 2)
  -key string
        TLS private key file
  -l string
        webserver listen address (default "127.0.0.1")
  -log-locations
        log messages with caller location
  -log-timestamps
        log messages with timestamps in unix format
  -mount-snapshots
        mount snapshot (only necessary if it's not mounted by zfs automatically
  -p int
        webserver port (default 12345)
  -tls
        use TLS - NOTE: -cert <CERT_FILE> -key <KEY_FILE> are mandatory
  -use-cache-dir-for-backups
        use platform depend user local cache directory for backups (default true)
  -use-sudo
        use sudo when executing 'zfs' commands
  -v	debug output
  -vv
        trace output with caller location
  -webapp-dir string
        when given, serve the webapp from the given directory

Project home page: https://j-keck.github.io/zfs-snap-diff

#+END_EXAMPLE


** Startup

   - startup a server instance

 #+BEGIN_SRC sh
 ./zfs-snap-diff [OPTIONS] <ZFS_DATASET_NAME>
 #+END_SRC

 This starts a embedded webserver and serves the included web-app at http://127.0.0.1:12345.

   - open your webbrowser at

 #+BEGIN_SRC sh
 http://127.0.0.1:12345
 #+END_SRC


** Browse the actual filesytem

You can browse the actual filesystem and inspect a diff from the actual file version to the older
file version in the selected snapshot, revert a single change or restore a whole file.

   #+attr_html: :alt Screenshot from 'Browse filesystem'
   [[/images/browse-filesystem.png][file:/images/browse-filesystem.png]]


** Browse snapshots

In this view you can view all snapshots.

  #+attr_html: :alt Screenshot from 'Browse snapshots'
  [[/images/browse-snapshots-snapshots.png][file:/images/browse-snapshots-snapshots.png]]

and inspect the directory content where the snapshot was created

  #+attr_html: :alt Browse snapshots / directory browser
  [[/images/browse-snapshots-dir-browser][file:/images/browse-snapshots-dir-browser.png]]


** Create snapshots

To create a snapshot of the actual dataset use the camera symbol {{< fa camera >}} in the dataset selector.
[[/images/create-snapshot-symbol.png]]

You can enter a snapshot name in *"Snapshot name template"* and ~zfs-snap-diff~ will
show the resulting name in *"Snapshot name"*.

  [[/images/create-snapshot.png][file:/images/create-snapshot.png]]

The template supports the following format sequences:
 #+BEGIN_EXAMPLE
 Format sequences are alike the `date` command
   %d: day of month (e.g., 01)
   %m: month (01..12)
   %y: last two digits of year (00..99)
   %Y: year
   %F: full date; like %Y-%m-%d
   %H: hour (00..23)
   %I: hour (01..12)
   %M: minute (00..59)
   %S: second (00..60)
   %s: seconds since 1970-01-01 00:00:00 UTC
 #+END_EXAMPLE

The default snapshot name template is per [[/docs/configuration/#snapshot-name-template][~snapshot-name-template~]] configurable.

** Destroy snapshot

You can destroy snapshots with the {{< fa trash >}} symbol in *"Browse snapshots"*
where you see all snapshots for the selected dataset.

[[/images/delete-snapshot.png][file:/images/delete-snapshot.png]]

** Download zip-archive

With the {{< fa file-archive >}} symbol in the file browser you can download
a whole directory as a zip-archive. You can download a archive from the
actual filesystem or from a snapshot.

[[/images/create-zip-archive.png][file:/images/create-zip-archive.png]]

The archive size is restricted by default. You can configure per
[[/docs/configuration/#max-archive-unpacked-size-mb][~max-archive-unpacked-size-mb~]].


* zsd
  :PROPERTIES:
  :export_file_name: zsd
  :export_hugo_weight: 35
  :export_hugo_section: docs
  :END:

~zsd~ - cli tool to find older versions of a given file in your zfs snapshots.

With ~zsd~ you can

  - find older file versions in your zfs snapshots for a given file

  - view the file content from a given snapshot

  - inspect a diff from the older version to the actual version

  - restore a version from a zfs snapshot

It uses the same code as ~zfs-snap-diff~ to find different file versions in your
zfs snapshots.

** Usage

#+BEGIN_EXAMPLE
main‚ü© zsd -h
zsd - cli tool to find older versions of a given file in your zfs snapshots.

USAGE:
 ./zsd [OPTIONS] <FILE> <ACTION>

OPTIONS:
  -V	print version and exit
  -d int
        days to scan (default 2)
 -mount-snapshots
        mount snapshot (only necessary if it's not mounted by zfs automatically
 -use-sudo
        use sudo when executing 'zfs' commands
  -v	debug output
  -vv
        trace output with caller location

ACTIONS:
  list                : list zfs snapshots where the given file was modified
  cat     <#|SNAPSHOT>: show the file content from the given snapshot
  diff    <#|SNAPSHOT>: show a diff from the selected snapshot to the actual version
  restore <#|SNAPSHOT>: restore the file from the given snapshot

You can use the snapshot number from the `list` output or the snapshot name to select a snapshot.

Project home page: https://j-keck.github.io/zfs-snap-diff
#+END_EXAMPLE

** List snapshots

Use the ~list~ action to list all snapshots where the
given file was modified.

 #+BEGIN_EXAMPLE
 main‚ü© zsd go.mod list
 scan the last 7 days for other file versions
   # | Snapshot                               | Snapshot age
 -----------------------------------------------------------
   0 | zfs-auto-snap_hourly-2020-02-12-12h00U | 5 hours
   1 | zfs-auto-snap_hourly-2020-02-12-09h00U | 8 hours
 #+END_EXAMPLE

** Show file content

Use the ~cat~ action to show the file content from
the given snapshot.

{{< hint info >}}
You can use the snapshot number from the ~list~ output
or the snapshot name to select a snapshot.
{{< /hint >}}

 #+BEGIN_EXAMPLE
 main‚ü© zsd go.mod cat 0
 module github.com/j-keck/zfs-snap-diff

 require (
	 github.com/j-keck/go-diff v1.0.0
	 github.com/j-keck/plog v0.5.0
	 github.com/stretchr/testify v1.4.0 // indirect
 )

 go 1.12
 #+END_EXAMPLE

** Show diff

To show a diff from the selected snapshot to the actual version
use the ~diff~ action.

{{< hint info >}}
You can use the snapshot number from the ~list~ output
or the snapshot name to select a snapshot.
{{< /hint >}}

 #+BEGIN_EXAMPLE
 main‚ü© zsd go.mod diff 0
 Diff from the actual version to the version from: 2020-02-12 10:07:44.434355182 +0100 CET
 module github.com/j-keck/zfs-snap-diff

 require (
    github.com/BurntSushi/toml v0.3.1
    github.com/j-keck/go-diff v1.0.0
 -  github.com/j-keck/plog v0.5.0
 +  github.com/j-keck/plog v0.6.0
    github.com/stretchr/testify v1.4.0 // indirect
 )

 go 1.12
 #+END_EXAMPLE

** Restore file

To restore a given file with an older version use ~restore~.

{{< hint info >}}
You can use the snapshot number from the ~list~ output
or the snapshot name to select a snapshot.
{{< /hint >}}

 #+BEGIN_EXAMPLE
 main‚ü© zsd go.mod restore 0
 backup from the actual version created at: /home/j/.cache/zfs-snap-diff/backups/home/j/prj/priv/zfs-snap-diff/go.mod_20200212_182709%
 version restored from snapshot: zfs-auto-snap_hourly-2020-02-12-12h00U
 #+END_EXAMPLE

{{< hint warning >}}
A backup of the actual version will be created.
{{< /hint >}}



* Configuration
:PROPERTIES:
:export_file_name: configuration
:export_hugo_weight: 40
:export_hugo_section: docs
:END:

~zfs-snap-diff~ loads it's configuration from:

{{< tabs "config-location" >}}
{{< tab "Linux, FreeBSD, Solaris" >}}
#+BEGIN_EXAMPLE
$XDG_CONFIG_HOME/.config/zfs-snap-diff/zfs-snap-diff.toml
$HOME/.config/zfs-snap-diff/zfs-snap-diff.toml
#+END_EXAMPLE
{{< /tab >}}
{{< tab "macOS" >}}
#+BEGIN_EXAMPLE
$HOME/Library/Application Support/zfs-snap-diff/zfs-snap-diff.toml
#+END_EXAMPLE
{{< /tab >}}
{{< /tabs >}}

if it does not find a configuration, it will create the following default configuration:
#+BEGIN_EXAMPLE
use-cache-dir-for-backups = true
days-to-scan = 2
max-archive-unpacked-size-mb = 200
snapshot-name-template = "zfs-snap-diff-%FT%H:%M"
compare-method = "auto"
diff-context-size = 5

[webserver]
  listen-ip = "127.0.0.1"
  listen-port = 12345
  use-tls = false
  cert-file = ""
  key-file = ""

[zfs]
  use-sudo = false
  mount-snapshots = false
#+END_EXAMPLE

*** ~use-cache-dir-for-backups~

If it's set to ~true~, the file backups will be stored in the users cache-directory.
#+BEGIN_QUOTE
On Unix systems, it returns $XDG_CACHE_HOME as specified by https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
if non-empty, else $HOME/.cache. On Darwin, it returns $HOME/Library/Caches. On Windows, it returns %LocalAppData%.
On Plan 9, it returns $home/lib/cache.
#+END_QUOTE
https://golang.org/pkg/os/#UserCacheDir


If it's ~false~, it will create the backup file under the actual directory in the ~./zfs-snap-diff/~ folder.

*** ~days-to-scan~

To speedup the scan for other file versions, ~zfs-snap-diff~ performs the scan incremental
when you request an older file version. This parameter determines how many days are scanned
if you request a older versions.

*** ~max-archive-unpacked-size-mb~

The maximal (unpacked) archive size is restricted by default.
Set this to ~-1~ to allow disable this restriction.

*** ~snapshot-name-template~

Snapshot name template. Used to create snapshots in the web-app.
The template supports the following format sequences:
 #+BEGIN_EXAMPLE
 Format sequences are alike the `date` command
   %d: day of month (e.g., 01)
   %m: month (01..12)
   %y: last two digits of year (00..99)
   %Y: year
   %F: full date; like %Y-%m-%d
   %H: hour (00..23)
   %I: hour (01..12)
   %M: minute (00..59)
   %S: second (00..60)
   %s: seconds since 1970-01-01 00:00:00 UTC
 #+END_EXAMPLE

*** ~compare-method~

Used compare method to find different file versions.
This is used when scanning the zfs snapshots to determine
if a file was modified in a snapshot.

**** auto
Uses ~md5~ for text files and ~size+mtime~ for others

**** size
If two files versions have the same filesize,
it's interpreted as the same version.

**** mtime
If two files versions have the same mtime,
it's interpreted as the same version.

**** size+mtime
If two files versions have the same size AND mtime,
it's interpreted as the same version.

**** content
If two files versions have the same content,
it's interpreted as the same version.

**** md5
If two files versions have the same md5 sum,
it's interpreted as the same version.

*** ~diff-context-size~

Diff context size in the webui.


* Changelog
:PROPERTIES:
:export_file_name: changelog
:export_hugo_weight: 50
:export_hugo_section: docs
:END:


** 1.0.0

{{< hint info >}}
This version is a complete rewrite.

The backend is implemented in [[https://golang.org][Go]] (as before) and the frontend in [[http://purescript.org][PureScript]].
{{< /hint >}}

If you have any questions, trouble or other input, feel free to open an
issue, contact me per mail (see my github profile), or over [[https://keybase.io/jkeck][keybase.io]].

  - create and destroy snapshots from the webapp

  - download a complete directory as a zip-archive

  - [[/docs/zsd][~zsd~]] cli tool to find different file-versions in the command line
    - does not need a running ~zfs-snap-diff~ instance

  - date-range based search for file versions
    - this speeds up the scan dramatically if
      there are thousands snapshots on spinning disks

  - bookmark support
    - bookmarks are per dataset and stored in the browser ([[https://en.wikipedia.org/wiki/Web_storage][Web storage]]).

  - works now also with 'legacy' mountpoints

[[https://github.com/j-keck/zfs-snap-diff/compare/0.0.10...v1.0.0][all commits from 0.0.10...v1.0.0]]


** 0.0.10

  - use relative url for service endpoints
    - to use zfs-snap-diff behind a reverse proxy
    - minimal example config snipped for nginx:

          location /zfs-snap-diff/ {
              proxy_pass http://localhost:12345/;
          }

  - optional tls encryption
  - listen address per '-l' flag configurable

[[https://github.com/j-keck/zfs-snap-diff/compare/0.0.9...0.0.10][all commits from 0.0.9...0.0.10]]

** 0.0.9

  - show file size and modify timestamp in the file-browser
  - list directories at first in the file-browser
  - sortable columns in the file-browser
  - only regular files / directories are clickable

[[https://github.com/j-keck/zfs-snap-diff/compare/0.0.8...0.0.9][all commits from 0.0.8...0.0.9]]

** 0.0.8

  * dataset selectable in 'browse-actual' view
  * add size informations to dataset (to match 'zfs list' output)
  * small fixes
  * code cleanup

[[https://github.com/j-keck/zfs-snap-diff/compare/0.0.7...0.0.8][all commits from 0.0.7...0.0.8]]

** 0.0.7

  - support sub zfs filesystems (datasets)
  - optional use sudo when execute zfs commands
    - necessary under linux when running as non root
    - needs sudo rules
    - start `zfs-snap-diff` with-'-use-sudo'
  - new view for server messages

[[https://github.com/j-keck/zfs-snap-diff/compare/0.0.6...0.0.7][all commits from 0.0.6...0.0.7]]

** 0.0.6

  - check if file in snapshot has changed filetype depend:
    - text files: md5
    - others: size+modTime
  - diffs created in the backend (per [[https://github.com/sergi/go-diff][go-diff]])
    - different presentation: intext / sid- by side
    - possibility to revert single changes

[[https://github.com/j-keck/zfs-snap-diff/compare/0.0.5...0.0.6][all commits from 0.0.5...0.0.6]]


** 0.0.5

  - file compare method configurable: size+modTime (default) or md5
  - optional limit how many snapshots are scan to search older file version
  - autohide notifications in frontend
  - show message if no snapshots found

[[https://github.com/j-keck/zfs-snap-diff/compare/0.0.4...0.0.5][all commits from 0.0.4...0.0.5]]

** 0.0.4

  - view, diff, download or restore file from a snapshot
  - view file with syntax highlight
  - browse old snapshot versions
  - easy switch "versions" per 'Older' / 'Newer' buttons
  - cleanup frontend
  - refactor backend

[[https://github.com/j-keck/zfs-snap-diff/compare/0.0.3...0.0.4][all commits 0.0.3...0.0.4]]

** 0.0.3

  - show server errors on frontend
  - show waiting spinner when loading

[[https://github.com/j-keck/zfs-snap-diff/compare/0.0.2...0.0.3][all commits 0.0.2...0.0.3]]

** 0.0.2

  - partial frontend configuration from server
  - fix firefox ui

[[https://github.com/j-keck/zfs-snap-diff/compare/0.0.1...0.0.2][all commits 0.0.1...0.0.2]]

** 0.0.1

  - prototype


